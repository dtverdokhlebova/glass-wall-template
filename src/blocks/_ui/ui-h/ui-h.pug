mixin ui-h2(text, mods, type)
  -
    const baseName = 'ui-h2'
    let allMods = ''
    if (typeof mods !== 'undefined' && mods) {
      const modsList = mods.split(',')
      for (const element of modsList) {
        allMods += element.trim()[0] === '-' ? ' ' + baseName + element.trim() : ' ' + element.trim() + '__' + baseName
      }
      allMods = allMods.trim()
    }

  case 'type'
    when 'h1'
      h1.ui-h2(class=allMods)&attributes(attributes) !{text}
        block
    default
      h2.ui-h2(class=allMods)&attributes(attributes) !{text}
        block

mixin ui-h3(text, mods)
  -
    const baseName = 'ui-h3'
    let allMods = ''
    if (typeof mods !== 'undefined' && mods) {
      const modsList = mods.split(',')
      for (const element of modsList) {
        allMods += element.trim()[0] === '-' ? ' ' + baseName + element.trim() : ' ' + element.trim() + '__' + baseName
      }
      allMods = allMods.trim()
    }

  h3.ui-h3(class=allMods)&attributes(attributes) !{text}
    block

mixin ui-h4(text, mods, type)
  -
    const baseName = 'ui-h4'
    let allMods = ''
    if (typeof mods !== 'undefined' && mods) {
      const modsList = mods.split(',')
      for (const element of modsList) {
        allMods += element.trim()[0] === '-' ? ' ' + baseName + element.trim() : ' ' + element.trim() + '__' + baseName
      }
      allMods = allMods.trim()
    }

  case 'type'
    when 'div'
      .ui-h4(class=allMods)&attributes(attributes) !{text}
        block
    default
      h4.ui-h4(class=allMods)&attributes(attributes) !{text}
        block

mixin ui-h5(text, mods)
  -
    const baseName = 'ui-h5'
    let allMods = ''
    if (typeof mods !== 'undefined' && mods) {
      const modsList = mods.split(',')
      for (const element of modsList) {
        allMods += element.trim()[0] === '-' ? ' ' + baseName + element.trim() : ' ' + element.trim() + '__' + baseName
      }
      allMods = allMods.trim()
    }

  h5.ui-h5(class=allMods)&attributes(attributes) !{text}
    block
